cluster.name: es
node.name: node-1
network.host: 0.0.0.0
http.port: 9200
discovery.seed_hosts: ["es01", "es02"]
cluster.initial_master_nodes: ["node-1", "node-2"]
# 必须设置为true才能启用安全认证
xpack.security.enabled: true

# Enable TLS on the HTTP layer.
xpack.security.http.ssl.enabled: true
# xpack.security.http.ssl.certificate_authorities: ${CERTS_DIR_ES}/tsl_ssl/ca.crt
xpack.security.http.ssl.key: ${CERTS_DIR_ES}/tsl_ssl/server.key
xpack.security.http.ssl.certificate: ${CERTS_DIR_ES}/tsl_ssl/server.crt

# Enable TLS on the transport layer.
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.verification_mode: certificate
# xpack.security.transport.ssl.certificate_authorities: ${CERTS_DIR_ES}/tsl_ssl/ca.crt
xpack.security.transport.ssl.certificate: ${CERTS_DIR_ES}/tsl_ssl/server.crt
xpack.security.transport.ssl.key: ${CERTS_DIR_ES}/tsl_ssl/server.key

# -------------------- Public key infrastructure (PKI) authentication --------------------

# Using a PKI realm is a gold feature.
# Configure Elasticsearch with a PKI realm and a native realm
#xpack.security.authc.realms.pki.realm1.order: 1
#xpack.security.authc.realms.pki.realm1.certificate_authorities: ${CERTS_DIR_ES}/tsl_ssl/ca.crt
#xpack.security.authc.realms.native.realm2.order: 2
#
## Configure Elasticsearch to request client certificates.
#xpack.security.http.ssl.client_authentication: "optional"