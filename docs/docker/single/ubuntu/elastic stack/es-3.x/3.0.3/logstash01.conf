input {
    # generator {
        # count => 100
        # message => 'hello world'
        # codec => json
        # add_field => {
            # source => "generator-msg"
            # from => "logstash"
        # }
    # }
    http {
        port => 8088
        codec => "json"
        # 自定义用户：拥有manage_index_templates、monitor、manage_ilm等权限
        user => "logstash_writer_user"
        password => "123456"
        add_field => {
            source => "http-msg"
            from => "logstash"
        }
    }
    tcp {
        port => 9700
        add_field => {
            source => "tcp-msg"
            from => "logstash"
        }
    }
    beats {
        port => 5044
        ssl => true
        # This key need to be in the PKCS8 format
        ssl_key => "${CERTS_DIR_LOGSTASH}/tsl_ssl/client.pem"
        ssl_certificate => "${CERTS_DIR_LOGSTASH}/tsl_ssl/client.crt"
        ssl_certificate_authorities => "${CERTS_DIR_LOGSTASH}/tsl_ssl/ca.crt"
        ssl_verify_mode => "force_peer"
        # SSL key passphrase to use
        #ssl_key_passphrase => ""
    }
    file {
        add_field => {
            source => "spring-log"
            from => "logstash"
        }
        path => ["/usr/share/logstash/logs/test.log"]
        sincedb_path => "NUL"
        start_position => "beginning"
    }
}
filter {
    if [source] == "log" {
        grok {
            # Do multiline matching with (?m) as the above mutliline filter may add newlines to the log messages.
            match => [ "message", "(?m)^%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:logLevel}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[%{SPACE}%{DATA:thread}\]%{SPACE}%{NOTSPACE:class}%{SPACE}:%{SPACE}%{GREEDYDATA:message}" ]
            overwrite => [ "message" ]
        }
    }
    if ![env] {
        ruby {
            code => "event.set('env', 'dev')"
        }
    }
}
output {

    if [from] == "metricbeat" {
        elasticsearch {
            hosts => ["https://es01:9200"]
            index => "%{[from]}-%{[source_module]}-%{+YYYYMMdd}"
            ssl => true
            cacert => "${CERTS_DIR_LOGSTASH}/tsl_ssl/ca.crt"
            user => "logstash_writer_user"
            password => "123456"
            # 关闭logstash自动管理模板功能
            manage_template => false
            # 使用指定的模板
            template_name => "metricbeat"
        }
    } else if [from] == "heartbeat" {
        elasticsearch {
            hosts => ["https://es01:9200"]
            index => "%{[from]}-%{[source_module]}-%{+YYYYMMdd}"
            ssl => true
            cacert => "${CERTS_DIR_LOGSTASH}/tsl_ssl/ca.crt"
            user => "logstash_writer_user"
            password => "123456"
            manage_template => false
            template_name => "heartbeat"
        }
    } else if [from] == "filebeat" {
        elasticsearch {
            hosts => ["https://es01:9200"]
            index => "%{[from]}-%{[source_module]}-%{+YYYYMMdd}"
            ssl => true
            cacert => "${CERTS_DIR_LOGSTASH}/tsl_ssl/ca.crt"
            user => "logstash_writer_user"
            password => "123456"
            manage_template => false
        }
    } else {
        elasticsearch {
            hosts => ["https://es01:9200"]
            index => "%{[from]}-%{[source]}-%{+YYYYMMdd}"
            ssl => true
            # 对es的http层进行tsl认证
            cacert => "${CERTS_DIR_LOGSTASH}/tsl_ssl/ca.crt"
            #  es配置了transport.ssl认证后，此处需指定账号密码
            # 自定义用户：拥有manage_index_templates、monitor、manage_ilm等权限
            user => "logstash_writer_user"
            password => "123456"
            manage_template => false
        }
    }
    # stdout { codec => rubydebug }
}

