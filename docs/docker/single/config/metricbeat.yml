########################## Metricbeat Configuration ###########################

#============================  Config Reloading ===============================

# Config reloading allows to dynamically load modules. Each file which is
# monitored must contain one or multiple modules as a list.
metricbeat.config.modules:

  # Glob pattern for configuration reloading
  # path: ${path.config}/modules.d/*.yml

  # Period on which files under path should be checked for changes
  reload.period: 10s

  # Set to true to enable config reloading
  reload.enabled: true

# Maximum amount of time to randomly delay the start of a metricset. Use 0 to
# disable startup delay.
metricbeat.max_start_delay: 10s

metricbeat.modules:
  #-------------------------------- System Module --------------------------------
  - module: system
    metricsets:
      - cpu             # CPU usage
      - load            # CPU load averages
      - memory          # Memory usage
      - network         # Network IO
      #- process         # Per process metrics
      - process_summary # Process summary
      - uptime          # System Uptime
      - socket_summary  # Socket summary
      #- core           # Per CPU core usage
      - diskio         # Disk IO
      #- filesystem     # File system usage for each mountpoint
      - fsstat         # File system summary metrics
      #- raid           # Raid
      #- socket         # Sockets and connection info (linux only)
      #- service        # systemd service information
    period: 100s
    process.include_top_n:
      by_cpu: 5
      by_memory: 5
    processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib|snap)($|/)'
      - add_fields:
          # target: ''时，属性设置为顶级属性，否则属于target的value值下的属性
          target: ''
          fields:
            from: host

  #---------------------------- Redis Module ----------------------------
  - module: redis
    metricsets: ["info", "key", "keyspace"]
    hosts: ["redis-6379:6379", "192.168.1.121:6379", "redis-7000:7000"]
    period: 100s
    #password: foobared
    # 收集名称以test- *开头且限制为20个键的所有键的信息
    key.patterns:
      - pattern: 'test-*'
        limit: 20

    processors:
      #      - include_fields:
      #          fields: ["beat", "metricset", "redis.info.stats"]
      - add_fields:
          target: ''
          fields:
            from: redis

  #---------------------------- Docker Module ----------------------------
  - module: docker
    metricsets:
      - "container"
      - "cpu"
      - "diskio"
      - "event"
      - "healthcheck"
      - "info"
      #- "image"
      - "memory"
      - "network"
    hosts: ["unix:///var/run/docker.sock"]
    period: 100s
    enabled: true
    processors:
      - add_fields:
          target: ''
          fields:
            from: docker

  #----------------------------- PostgreSQL Module --------------------------------
  - module: postgresql
    enabled: true
    metricsets:
      # Stats about every PostgreSQL database
      - database
      # Stats about the background writer process's activity
      - bgwriter
      # Stats about every PostgreSQL process
      - activity
      - statement
    # The host must be passed as PostgreSQL URL. Example:
    # postgres://localhost:5432?sslmode=disable
    # The available parameters are documented here:
    # https://godoc.org/github.com/lib/pq#hdr-Connection_String_Parameters
    # [postgres://][user:pass@]host[:port][?options]

    # 此处可以使用docker0的ip或者宿主机ip，但是不能使用容器服务名或者容器本身ip
    # hosts: ["postgres://172.20.228.138:5433?sslmode=disable"]
    hosts: ["postgres://172.17.0.1:5433?sslmode=disable"]
    # Username to use when connecting to PostgreSQL. Empty by default.
    username: test
    # Password to use when connecting to PostgreSQL. Empty by default.
    password: test
    period: 10s
    processors:
      - add_fields:
          target: ''
          fields:
            from: postgres

  #--------------------------------- HTTP Module ---------------------------------
  - module: http
    metricsets:
      - json  # As client
    period: 100s
    hosts: ["192.168.1.110:8001"]
    namespace: "json_namespace"
    path: "/api"
    #body: ""
    #method: "GET"
    #username: "user"
    #password: "secret"
    #request.enabled: false
    #response.enabled: false
    #json.is_array: false
    #dedot.enabled: false
    processors:
      - add_fields:
          target: ''
          fields:
            from: http

  - module: http
    metricsets: ["server"]  # As a server，only accept post requests
    host: "172.18.0.2" # If using metricbeat container, here is the container ip
    port: "8002"
    server.paths:
      - path: "/api"
        namespace: "server_namespace"
        fields: # added to the the response in root. overwrites existing fields
          env: "test"
    processors:
      - add_fields:
          target: ''
          fields:
            from: http

#----------------------------- Processors -----------------------------
processors:
  - add_fields:
      target: ''
      fields:
        env: test
        source: facility
        type: metrics

#----------------------------- Logstash output --------------------------------
output.logstash:
  hosts: ["logstash:9602"]



